#include "PageGetter.h"

#include <AtlBase.h>
#include <AtlCom.h>
#include <UIAutomation.h>

PageGetter::PageGetter() { CoInitialize(nullptr); }
PageGetter::~PageGetter() { CoUninitialize(); }

ChromeGetter::ChromeGetter() { CoInitialize(nullptr); }
ChromeGetter::~ChromeGetter() { CoUninitialize(); }

BSTR ChromeGetter::getActivePageLink() {
  HWND hwnd = nullptr;

  while (true) {
    hwnd = FindWindowEx(0, hwnd, "Chrome_WidgetWin_1", nullptr);
    if (!hwnd) break;
    if (!IsWindowVisible(hwnd)) continue;

    CComQIPtr<IUIAutomation> uia;
    if (FAILED(uia.CoCreateInstance(CLSID_CUIAutomation)) || !uia) break;

    CComPtr<IUIAutomationElement> root;
    if (FAILED(uia->ElementFromHandle(hwnd, &root)) || !root) break;

    CComPtr<IUIAutomationCondition> condition;

    uia->CreatePropertyCondition(UIA_ControlTypePropertyId, CComVariant(0xC354),
                                 &condition);

    CComPtr<IUIAutomationElement> edit;
    if (FAILED(root->FindFirst(TreeScope_Descendants, condition, &edit)) ||
        !edit)
      continue;

    CComVariant url;
    edit->GetCurrentPropertyValue(UIA_ValueValuePropertyId, &url);

    return url.bstrVal;
  }
}